openapi: 3.0.3
info:
  title: Invidious
  description: |-
    This is the api for invidious
  version: '1'
servers:
  - url: https://invidious.fdn.fr/api/v1
tags:
  - name: channel
    description: Everything about YouTube channels
paths:
  /channels/{channelId}:
    get:
      tags:
        - channel
      summary: Get channel information
      description: Update an existing pet by Id
      parameters:
        - name: channelId
          in: path
          description: ID of the channel to return
          required: true
          schema:
            type: string
            pattern: ^([Uu][Cc][a-zA-Z0-9_-]{22})$
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
  /channels/{channelId}/playlists:
    get:
      tags:
        - channel
      summary: Get a channel's playlist
      parameters:
        - name: channelId
          in: path
          description: ID of the channel to return
          required: true
          schema:
            type: string
            pattern: ^([Uu][Cc][a-zA-Z0-9_-]{22})$
        - name: continuation
          in: query
          description: the continuation of the channel's playlist feed
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelPlaylistsResponse'
  /channels/{channelId}/shorts:
    get:
      tags:
        - channel
      summary: Get a channel's shorts
      parameters:
        - name: channelId
          in: path
          description: ID of the channel to return
          required: true
          schema:
            type: string
            pattern: ^([Uu][Cc][a-zA-Z0-9_-]{22})$
        - name: continuation
          in: query
          description: the continuation of the channel's shorts feed
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelVideosResponse'

  /channels/{channelId}/streams:
    get:
      tags:
        - channel
      summary: Get a channel's streams
      parameters:
        - name: channelId
          in: path
          description: ID of the channel to return
          required: true
          schema:
            type: string
            pattern: ^([Uu][Cc][a-zA-Z0-9_-]{22})$
        - name: continuation
          in: query
          description: the continuation of the channel's streams feed
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelVideosResponse'

  /channels/{channelId}/videos:
    get:
      tags:
        - channel
      summary: Get a channel's videos
      parameters:
        - name: channelId
          in: path
          description: ID of the channel to return
          required: true
          schema:
            type: string
            pattern: ^([Uu][Cc][a-zA-Z0-9_-]{22})$
        - name: continuation
          in: query
          description: the continuation of the channel's videos feed
          required: false
          schema:
            type: string
        - name: sort_by
          in: query
          description: the continuation of the channel's videos feed
          required: false
          schema:
            type: string
            enum: [newest, popular, oldest]
            default: newest

      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelVideosResponse'
  /channels/{channelId}/community:
    get:
      tags:
        - channel
      summary: Get a channel's community feed
      parameters:
        - name: channelId
          in: path
          description: ID of the channel to return
          required: true
          schema:
            type: string
            pattern: ^([Uu][Cc][a-zA-Z0-9_-]{22})$
        - name: continuation
          in: query
          description: the continuation of the channel's community feed
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCommunityResponse'
components:
  schemas:
    Channel:
      type: object
      allOf:
        - $ref: '#/components/schemas/AuthorObject'
      properties:
        authorBanners:
          type: array
          items:
            $ref: '#/components/schemas/ImageObject'
        authorThumbnails:
          type: array
          items:
            $ref: '#/components/schemas/ImageObject'
        subCount:
          type: integer
        totalViews:
          type: integer
        joined:
          type: integer
        autoGenerated:
          type: boolean
        isFamilyFriendly:
          type: boolean
        description:
          type: string
        descriptionHtml:
          type: string
        allowedRegions:
          type: array
          items:
            type: string
        tabs:
          type: array
          items:
            type: string
            example: ['videos', 'streams', 'community']
        latestVideos:
          type: array
          items:
            $ref: '#/components/schemas/VideoObject'
          
        
    ImageObject:
      type: object
      properties:
        url:
          type: string
        width:
          type: integer
        height:
          type: integer
    ThumbnailObject:
      type: object
      properties:
        quality:
          type: string
        url:
          type: string
        width:
          type: integer
        height:
          type: integer
    VideoObject:
      type: object
      allOf:
        - $ref: '#/components/schemas/AuthorObject'
      properties:
        type:
          type: string
          enum: [video]
        title:
          type: string
        videoId:
          type: string
        videoThumbnails:
          type: array
          items:
            $ref: '#/components/schemas/ThumbnailObject'
        description:
          type: string
        descriptionHtml:
          type: string
        viewCount:
          type: integer
        viewCountText:
          type: string
        published:
          type: integer
        publishedText:
          type: string
        premiereTimestamp:
          type: integer
        liveNow:
          type: boolean
        premium:
          type: boolean
        isUpcoming:
          type: boolean
    PlaylistObject:
      type: object
      allOf:
        - $ref: '#/components/schemas/AuthorObject'
      properties:
        type:
          type: string
          enum: [playlist]
        title:
          type: string
        playlistId:
          type: string
        playlistThumbnail:
          type: string
        author:
          type: string
    AuthorObject:
      type: object
      properties:
        author:
          type: string
          example: Mr Beast
        authorId:
          type: string
          example: UCX6OQ3DkcsbYNE6H8uQQuVA
        authorUrl:
          type: string
          example: https://www.youtube.com/channel/UCX6OQ3DkcsbYNE6H8uQQuVA
        authorVerified:
          type: boolean
          example: true
    ImageAttachment:
      type: object
      properties:
        type:
          type: string
          enum: [image]
        imageThumbnails:
          type: array
          items:
            $ref: '#/components/schemas/ImageObject'
    MultiImageAttachment:
      type: object
      properties:
        type:
          type: string
          enum: [multiImage]
        images:
          type: array
          items:
            type: array
            items:
              $ref: '#/components/schemas/ImageObject'
    PollAttachment:
      type: object
      required:
        - type
        - totalVotes
        - choices
      properties:
        type:
          type: string
          enum: [poll]
        totalVotes:
          type: integer
        choices:
          type: array
          items:
            type: object
            required:
              - text
            properties:
              text:
                type: string
              image:
                $ref: '#/components/schemas/ImageObject'
            
    QuizAttachment:
      type: object
      required:
        - type
        - totalVotes
        - choices
      properties:
        type:
          type: string
          enum: [quiz]
        totalVotes:
          type: integer
        choices:
          type: array
          items:
            type: object
            required:
              - text
              - isCorrect
            properties:
              text:
                type: string
              isCorrect:
                type: boolean
    UnknownAttachment:
      type: object
      required:
        - type
        - error
      properties:
        type:
          type: string
          enum:
            - unknown
        error:
          type: string
    ChannelVideosResponse:
      type: object
      required:
        - continuation
        - videos
      properties:
        videos:
          type: array
          items:
            $ref: '#/components/schemas/VideoObject'
        continuation:
          type: string
    ChannelPlaylistsResponse:
      type: object
      required:
        - continuation
        - playlists
      properties:
        playlists:
          type: array
          items:
            $ref: '#/components/schemas/PlaylistObject'
        continuation:
          type: string
    ChannelCommunityResponse:
      type: object
      required:
        - authorId
        - comments
      properties:
        authorId:
          type: string
        comments:
          type: array
          items:
            type: object
            allOf:
              - $ref: '#/components/schemas/AuthorObject'
            properties:
              attachment:
                type: object
                oneOf:
                  - $ref: '#/components/schemas/ImageAttachment'
                  - $ref: '#/components/schemas/PollAttachment'
                  - $ref: '#/components/schemas/QuizAttachment'
                  - $ref: '#/components/schemas/VideoObject'
                  - $ref: '#/components/schemas/MultiImageAttachment'
                  - $ref: '#/components/schemas/PlaylistObject'
              author:
                type: string
              authorId:
                type: string
              authorIsChannelOwner:
                type: boolean
              authorUrl:
                type: string
              authorThumbnails:
                type: array
                items:
                  type: array
                  items:
                    $ref: '#/components/schemas/ImageObject'
              commentId:
                type: string
              content:
                type: string
              contentHtml:
                type: string
              isEdited:
                type: boolean
              likeCount:
                type: number
              published:
                type: number
              publishedText:
                type: string
              replyCount:
                type: number

